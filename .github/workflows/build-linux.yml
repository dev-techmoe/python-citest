name: build
on:
  push:
    tags:
      - '*'

jobs:
  build-linux:
    name: build-linux
    runs-on: ubuntu-20.04
    strategy:
        matrix:
          python-version: [ 3.8.2 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry update
          poetry install
      - name: Build executable file
        run: |
          poetry run pyinstaller jsonip/cli.py -F
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/cli
          asset_name: linux-386-jsonip
          asset_content_type: application/x-binary

  build-linux-arm:
    name: build-linux-arm
    runs-on: ubuntu-20.04
    strategy:
        matrix:
          python-version: [ 3.8.2 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            echo "\ndeb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic main" >> /etc/apt/source.list
            apt-get update
            apt-get install python3.8 python3.8-dev python3-pip python3-venv -y
            python3.8 -m pip install poetry virtualenv
            poetry update
            poetry install
            poetry run pyinstaller jsonip/cli.py -F
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/cli
          asset_name: linux-armv7-jsonip
          asset_content_type: application/x-binary